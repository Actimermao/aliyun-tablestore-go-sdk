// Code generated by protoc-gen-go. DO NOT EDIT.
// source: search.proto

package otsprotocol

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type QueryType int32

const (
	QueryType_MATCH_QUERY            QueryType = 1
	QueryType_MATCH_PHRASE_QUERY     QueryType = 2
	QueryType_TERM_QUERY             QueryType = 3
	QueryType_RANGE_QUERY            QueryType = 4
	QueryType_PREFIX_QUERY           QueryType = 5
	QueryType_BOOL_QUERY             QueryType = 6
	QueryType_CONST_SCORE_QUERY      QueryType = 7
	QueryType_FUNCTION_SCORE_QUERY   QueryType = 8
	QueryType_NESTED_QUERY           QueryType = 9
	QueryType_WILDCARD_QUERY         QueryType = 10
	QueryType_MATCH_ALL_QUERY        QueryType = 11
	QueryType_GEO_BOUNDING_BOX_QUERY QueryType = 12
	QueryType_GEO_DISTANCE_QUERY     QueryType = 13
	QueryType_GEO_POLYGON_QUERY      QueryType = 14
)

var QueryType_name = map[int32]string{
	1:  "MATCH_QUERY",
	2:  "MATCH_PHRASE_QUERY",
	3:  "TERM_QUERY",
	4:  "RANGE_QUERY",
	5:  "PREFIX_QUERY",
	6:  "BOOL_QUERY",
	7:  "CONST_SCORE_QUERY",
	8:  "FUNCTION_SCORE_QUERY",
	9:  "NESTED_QUERY",
	10: "WILDCARD_QUERY",
	11: "MATCH_ALL_QUERY",
	12: "GEO_BOUNDING_BOX_QUERY",
	13: "GEO_DISTANCE_QUERY",
	14: "GEO_POLYGON_QUERY",
}
var QueryType_value = map[string]int32{
	"MATCH_QUERY":            1,
	"MATCH_PHRASE_QUERY":     2,
	"TERM_QUERY":             3,
	"RANGE_QUERY":            4,
	"PREFIX_QUERY":           5,
	"BOOL_QUERY":             6,
	"CONST_SCORE_QUERY":      7,
	"FUNCTION_SCORE_QUERY":   8,
	"NESTED_QUERY":           9,
	"WILDCARD_QUERY":         10,
	"MATCH_ALL_QUERY":        11,
	"GEO_BOUNDING_BOX_QUERY": 12,
	"GEO_DISTANCE_QUERY":     13,
	"GEO_POLYGON_QUERY":      14,
}

func (x QueryType) Enum() *QueryType {
	p := new(QueryType)
	*p = x
	return p
}
func (x QueryType) String() string {
	return proto.EnumName(QueryType_name, int32(x))
}
func (x *QueryType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(QueryType_value, data, "QueryType")
	if err != nil {
		return err
	}
	*x = QueryType(value)
	return nil
}
func (QueryType) EnumDescriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

type ScoreMode int32

const (
	ScoreMode_SCORE_MODE_NONE  ScoreMode = 1
	ScoreMode_SCORE_MODE_AVG   ScoreMode = 2
	ScoreMode_SCORE_MODE_MAX   ScoreMode = 3
	ScoreMode_SCORE_MODE_TOTAL ScoreMode = 4
	ScoreMode_SCORE_MODE_MIN   ScoreMode = 5
)

var ScoreMode_name = map[int32]string{
	1: "SCORE_MODE_NONE",
	2: "SCORE_MODE_AVG",
	3: "SCORE_MODE_MAX",
	4: "SCORE_MODE_TOTAL",
	5: "SCORE_MODE_MIN",
}
var ScoreMode_value = map[string]int32{
	"SCORE_MODE_NONE":  1,
	"SCORE_MODE_AVG":   2,
	"SCORE_MODE_MAX":   3,
	"SCORE_MODE_TOTAL": 4,
	"SCORE_MODE_MIN":   5,
}

func (x ScoreMode) Enum() *ScoreMode {
	p := new(ScoreMode)
	*p = x
	return p
}
func (x ScoreMode) String() string {
	return proto.EnumName(ScoreMode_name, int32(x))
}
func (x *ScoreMode) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ScoreMode_value, data, "ScoreMode")
	if err != nil {
		return err
	}
	*x = ScoreMode(value)
	return nil
}
func (ScoreMode) EnumDescriptor() ([]byte, []int) { return fileDescriptor2, []int{1} }

type SortOrder int32

const (
	SortOrder_SORT_ORDER_ASC  SortOrder = 0
	SortOrder_SORT_ORDER_DESC SortOrder = 1
)

var SortOrder_name = map[int32]string{
	0: "SORT_ORDER_ASC",
	1: "SORT_ORDER_DESC",
}
var SortOrder_value = map[string]int32{
	"SORT_ORDER_ASC":  0,
	"SORT_ORDER_DESC": 1,
}

func (x SortOrder) Enum() *SortOrder {
	p := new(SortOrder)
	*p = x
	return p
}
func (x SortOrder) String() string {
	return proto.EnumName(SortOrder_name, int32(x))
}
func (x *SortOrder) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(SortOrder_value, data, "SortOrder")
	if err != nil {
		return err
	}
	*x = SortOrder(value)
	return nil
}
func (SortOrder) EnumDescriptor() ([]byte, []int) { return fileDescriptor2, []int{2} }

type SortMode int32

const (
	SortMode_SORT_MODE_MIN SortMode = 0
	SortMode_SORT_MODE_MAX SortMode = 1
	SortMode_SORT_MODE_AVG SortMode = 2
)

var SortMode_name = map[int32]string{
	0: "SORT_MODE_MIN",
	1: "SORT_MODE_MAX",
	2: "SORT_MODE_AVG",
}
var SortMode_value = map[string]int32{
	"SORT_MODE_MIN": 0,
	"SORT_MODE_MAX": 1,
	"SORT_MODE_AVG": 2,
}

func (x SortMode) Enum() *SortMode {
	p := new(SortMode)
	*p = x
	return p
}
func (x SortMode) String() string {
	return proto.EnumName(SortMode_name, int32(x))
}
func (x *SortMode) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(SortMode_value, data, "SortMode")
	if err != nil {
		return err
	}
	*x = SortMode(value)
	return nil
}
func (SortMode) EnumDescriptor() ([]byte, []int) { return fileDescriptor2, []int{3} }

type GeoDistanceType int32

const (
	GeoDistanceType_GEO_DISTANCE_ARC   GeoDistanceType = 0
	GeoDistanceType_GEO_DISTANCE_PLANE GeoDistanceType = 1
)

var GeoDistanceType_name = map[int32]string{
	0: "GEO_DISTANCE_ARC",
	1: "GEO_DISTANCE_PLANE",
}
var GeoDistanceType_value = map[string]int32{
	"GEO_DISTANCE_ARC":   0,
	"GEO_DISTANCE_PLANE": 1,
}

func (x GeoDistanceType) Enum() *GeoDistanceType {
	p := new(GeoDistanceType)
	*p = x
	return p
}
func (x GeoDistanceType) String() string {
	return proto.EnumName(GeoDistanceType_name, int32(x))
}
func (x *GeoDistanceType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GeoDistanceType_value, data, "GeoDistanceType")
	if err != nil {
		return err
	}
	*x = GeoDistanceType(value)
	return nil
}
func (GeoDistanceType) EnumDescriptor() ([]byte, []int) { return fileDescriptor2, []int{4} }

type ColumnReturnType int32

const (
	ColumnReturnType_RETURN_ALL       ColumnReturnType = 1
	ColumnReturnType_RETURN_SPECIFIED ColumnReturnType = 2
	ColumnReturnType_RETURN_NONE      ColumnReturnType = 3
)

var ColumnReturnType_name = map[int32]string{
	1: "RETURN_ALL",
	2: "RETURN_SPECIFIED",
	3: "RETURN_NONE",
}
var ColumnReturnType_value = map[string]int32{
	"RETURN_ALL":       1,
	"RETURN_SPECIFIED": 2,
	"RETURN_NONE":      3,
}

func (x ColumnReturnType) Enum() *ColumnReturnType {
	p := new(ColumnReturnType)
	*p = x
	return p
}
func (x ColumnReturnType) String() string {
	return proto.EnumName(ColumnReturnType_name, int32(x))
}
func (x *ColumnReturnType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ColumnReturnType_value, data, "ColumnReturnType")
	if err != nil {
		return err
	}
	*x = ColumnReturnType(value)
	return nil
}
func (ColumnReturnType) EnumDescriptor() ([]byte, []int) { return fileDescriptor2, []int{5} }

type IndexOptions int32

const (
	IndexOptions_DOCS      IndexOptions = 1
	IndexOptions_FREQS     IndexOptions = 2
	IndexOptions_POSITIONS IndexOptions = 3
	IndexOptions_OFFSETS   IndexOptions = 4
)

var IndexOptions_name = map[int32]string{
	1: "DOCS",
	2: "FREQS",
	3: "POSITIONS",
	4: "OFFSETS",
}
var IndexOptions_value = map[string]int32{
	"DOCS":      1,
	"FREQS":     2,
	"POSITIONS": 3,
	"OFFSETS":   4,
}

func (x IndexOptions) Enum() *IndexOptions {
	p := new(IndexOptions)
	*p = x
	return p
}
func (x IndexOptions) String() string {
	return proto.EnumName(IndexOptions_name, int32(x))
}
func (x *IndexOptions) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(IndexOptions_value, data, "IndexOptions")
	if err != nil {
		return err
	}
	*x = IndexOptions(value)
	return nil
}
func (IndexOptions) EnumDescriptor() ([]byte, []int) { return fileDescriptor2, []int{6} }

type FieldType int32

const (
	FieldType_LONG      FieldType = 1
	FieldType_DOUBLE    FieldType = 2
	FieldType_BOOLEAN   FieldType = 3
	FieldType_KEYWORD   FieldType = 4
	FieldType_TEXT      FieldType = 5
	FieldType_NESTED    FieldType = 6
	FieldType_GEO_POINT FieldType = 7
)

var FieldType_name = map[int32]string{
	1: "LONG",
	2: "DOUBLE",
	3: "BOOLEAN",
	4: "KEYWORD",
	5: "TEXT",
	6: "NESTED",
	7: "GEO_POINT",
}
var FieldType_value = map[string]int32{
	"LONG":      1,
	"DOUBLE":    2,
	"BOOLEAN":   3,
	"KEYWORD":   4,
	"TEXT":      5,
	"NESTED":    6,
	"GEO_POINT": 7,
}

func (x FieldType) Enum() *FieldType {
	p := new(FieldType)
	*p = x
	return p
}
func (x FieldType) String() string {
	return proto.EnumName(FieldType_name, int32(x))
}
func (x *FieldType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(FieldType_value, data, "FieldType")
	if err != nil {
		return err
	}
	*x = FieldType(value)
	return nil
}
func (FieldType) EnumDescriptor() ([]byte, []int) { return fileDescriptor2, []int{7} }

type SyncPhase int32

const (
	SyncPhase_FULL SyncPhase = 1
	SyncPhase_INCR SyncPhase = 2
)

var SyncPhase_name = map[int32]string{
	1: "FULL",
	2: "INCR",
}
var SyncPhase_value = map[string]int32{
	"FULL": 1,
	"INCR": 2,
}

func (x SyncPhase) Enum() *SyncPhase {
	p := new(SyncPhase)
	*p = x
	return p
}
func (x SyncPhase) String() string {
	return proto.EnumName(SyncPhase_name, int32(x))
}
func (x *SyncPhase) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(SyncPhase_value, data, "SyncPhase")
	if err != nil {
		return err
	}
	*x = SyncPhase(value)
	return nil
}
func (SyncPhase) EnumDescriptor() ([]byte, []int) { return fileDescriptor2, []int{8} }

type MatchQuery struct {
	FieldName        *string `protobuf:"bytes,1,opt,name=field_name,json=fieldName" json:"field_name,omitempty"`
	Text             *string `protobuf:"bytes,2,opt,name=text" json:"text,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *MatchQuery) Reset()                    { *m = MatchQuery{} }
func (m *MatchQuery) String() string            { return proto.CompactTextString(m) }
func (*MatchQuery) ProtoMessage()               {}
func (*MatchQuery) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

func (m *MatchQuery) GetFieldName() string {
	if m != nil && m.FieldName != nil {
		return *m.FieldName
	}
	return ""
}

func (m *MatchQuery) GetText() string {
	if m != nil && m.Text != nil {
		return *m.Text
	}
	return ""
}

type MatchPhraseQuery struct {
	FieldName        *string `protobuf:"bytes,1,opt,name=field_name,json=fieldName" json:"field_name,omitempty"`
	Text             *string `protobuf:"bytes,2,opt,name=text" json:"text,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *MatchPhraseQuery) Reset()                    { *m = MatchPhraseQuery{} }
func (m *MatchPhraseQuery) String() string            { return proto.CompactTextString(m) }
func (*MatchPhraseQuery) ProtoMessage()               {}
func (*MatchPhraseQuery) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{1} }

func (m *MatchPhraseQuery) GetFieldName() string {
	if m != nil && m.FieldName != nil {
		return *m.FieldName
	}
	return ""
}

func (m *MatchPhraseQuery) GetText() string {
	if m != nil && m.Text != nil {
		return *m.Text
	}
	return ""
}

type MatchAllQuery struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *MatchAllQuery) Reset()                    { *m = MatchAllQuery{} }
func (m *MatchAllQuery) String() string            { return proto.CompactTextString(m) }
func (*MatchAllQuery) ProtoMessage()               {}
func (*MatchAllQuery) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{2} }

type TermQuery struct {
	FieldName        *string `protobuf:"bytes,1,opt,name=field_name,json=fieldName" json:"field_name,omitempty"`
	Term             []byte  `protobuf:"bytes,2,opt,name=term" json:"term,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *TermQuery) Reset()                    { *m = TermQuery{} }
func (m *TermQuery) String() string            { return proto.CompactTextString(m) }
func (*TermQuery) ProtoMessage()               {}
func (*TermQuery) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{3} }

func (m *TermQuery) GetFieldName() string {
	if m != nil && m.FieldName != nil {
		return *m.FieldName
	}
	return ""
}

func (m *TermQuery) GetTerm() []byte {
	if m != nil {
		return m.Term
	}
	return nil
}

type RangeQuery struct {
	FieldName        *string `protobuf:"bytes,1,opt,name=field_name,json=fieldName" json:"field_name,omitempty"`
	RangeFrom        []byte  `protobuf:"bytes,2,opt,name=range_from,json=rangeFrom" json:"range_from,omitempty"`
	RangeTo          []byte  `protobuf:"bytes,3,opt,name=range_to,json=rangeTo" json:"range_to,omitempty"`
	IncludeLower     *bool   `protobuf:"varint,4,opt,name=include_lower,json=includeLower" json:"include_lower,omitempty"`
	IncludeUpper     *bool   `protobuf:"varint,5,opt,name=include_upper,json=includeUpper" json:"include_upper,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *RangeQuery) Reset()                    { *m = RangeQuery{} }
func (m *RangeQuery) String() string            { return proto.CompactTextString(m) }
func (*RangeQuery) ProtoMessage()               {}
func (*RangeQuery) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{4} }

func (m *RangeQuery) GetFieldName() string {
	if m != nil && m.FieldName != nil {
		return *m.FieldName
	}
	return ""
}

func (m *RangeQuery) GetRangeFrom() []byte {
	if m != nil {
		return m.RangeFrom
	}
	return nil
}

func (m *RangeQuery) GetRangeTo() []byte {
	if m != nil {
		return m.RangeTo
	}
	return nil
}

func (m *RangeQuery) GetIncludeLower() bool {
	if m != nil && m.IncludeLower != nil {
		return *m.IncludeLower
	}
	return false
}

func (m *RangeQuery) GetIncludeUpper() bool {
	if m != nil && m.IncludeUpper != nil {
		return *m.IncludeUpper
	}
	return false
}

type PrefixQuery struct {
	FieldName        *string `protobuf:"bytes,1,opt,name=field_name,json=fieldName" json:"field_name,omitempty"`
	Prefix           *string `protobuf:"bytes,2,opt,name=prefix" json:"prefix,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *PrefixQuery) Reset()                    { *m = PrefixQuery{} }
func (m *PrefixQuery) String() string            { return proto.CompactTextString(m) }
func (*PrefixQuery) ProtoMessage()               {}
func (*PrefixQuery) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{5} }

func (m *PrefixQuery) GetFieldName() string {
	if m != nil && m.FieldName != nil {
		return *m.FieldName
	}
	return ""
}

func (m *PrefixQuery) GetPrefix() string {
	if m != nil && m.Prefix != nil {
		return *m.Prefix
	}
	return ""
}

type WildcardQuery struct {
	FieldName        *string `protobuf:"bytes,1,opt,name=field_name,json=fieldName" json:"field_name,omitempty"`
	Value            *string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *WildcardQuery) Reset()                    { *m = WildcardQuery{} }
func (m *WildcardQuery) String() string            { return proto.CompactTextString(m) }
func (*WildcardQuery) ProtoMessage()               {}
func (*WildcardQuery) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{6} }

func (m *WildcardQuery) GetFieldName() string {
	if m != nil && m.FieldName != nil {
		return *m.FieldName
	}
	return ""
}

func (m *WildcardQuery) GetValue() string {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return ""
}

type BoolQuery struct {
	MustQueries        []*Query `protobuf:"bytes,1,rep,name=must_queries,json=mustQueries" json:"must_queries,omitempty"`
	MustNotQueries     []*Query `protobuf:"bytes,2,rep,name=must_not_queries,json=mustNotQueries" json:"must_not_queries,omitempty"`
	FilterQueries      []*Query `protobuf:"bytes,3,rep,name=filter_queries,json=filterQueries" json:"filter_queries,omitempty"`
	ShouldQueries      []*Query `protobuf:"bytes,4,rep,name=should_queries,json=shouldQueries" json:"should_queries,omitempty"`
	MinimumShouldMatch *int32   `protobuf:"varint,5,opt,name=minimum_should_match,json=minimumShouldMatch" json:"minimum_should_match,omitempty"`
	XXX_unrecognized   []byte   `json:"-"`
}

func (m *BoolQuery) Reset()                    { *m = BoolQuery{} }
func (m *BoolQuery) String() string            { return proto.CompactTextString(m) }
func (*BoolQuery) ProtoMessage()               {}
func (*BoolQuery) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{7} }

func (m *BoolQuery) GetMustQueries() []*Query {
	if m != nil {
		return m.MustQueries
	}
	return nil
}

func (m *BoolQuery) GetMustNotQueries() []*Query {
	if m != nil {
		return m.MustNotQueries
	}
	return nil
}

func (m *BoolQuery) GetFilterQueries() []*Query {
	if m != nil {
		return m.FilterQueries
	}
	return nil
}

func (m *BoolQuery) GetShouldQueries() []*Query {
	if m != nil {
		return m.ShouldQueries
	}
	return nil
}

func (m *BoolQuery) GetMinimumShouldMatch() int32 {
	if m != nil && m.MinimumShouldMatch != nil {
		return *m.MinimumShouldMatch
	}
	return 0
}

type ConstScoreQuery struct {
	Filter           *Query `protobuf:"bytes,1,opt,name=filter" json:"filter,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *ConstScoreQuery) Reset()                    { *m = ConstScoreQuery{} }
func (m *ConstScoreQuery) String() string            { return proto.CompactTextString(m) }
func (*ConstScoreQuery) ProtoMessage()               {}
func (*ConstScoreQuery) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{8} }

func (m *ConstScoreQuery) GetFilter() *Query {
	if m != nil {
		return m.Filter
	}
	return nil
}

type FieldValueFactor struct {
	FieldName        *string `protobuf:"bytes,1,opt,name=field_name,json=fieldName" json:"field_name,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *FieldValueFactor) Reset()                    { *m = FieldValueFactor{} }
func (m *FieldValueFactor) String() string            { return proto.CompactTextString(m) }
func (*FieldValueFactor) ProtoMessage()               {}
func (*FieldValueFactor) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{9} }

func (m *FieldValueFactor) GetFieldName() string {
	if m != nil && m.FieldName != nil {
		return *m.FieldName
	}
	return ""
}

type FunctionScoreQuery struct {
	Query            *Query            `protobuf:"bytes,1,opt,name=query" json:"query,omitempty"`
	FieldValueFactor *FieldValueFactor `protobuf:"bytes,2,opt,name=field_value_factor,json=fieldValueFactor" json:"field_value_factor,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *FunctionScoreQuery) Reset()                    { *m = FunctionScoreQuery{} }
func (m *FunctionScoreQuery) String() string            { return proto.CompactTextString(m) }
func (*FunctionScoreQuery) ProtoMessage()               {}
func (*FunctionScoreQuery) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{10} }

func (m *FunctionScoreQuery) GetQuery() *Query {
	if m != nil {
		return m.Query
	}
	return nil
}

func (m *FunctionScoreQuery) GetFieldValueFactor() *FieldValueFactor {
	if m != nil {
		return m.FieldValueFactor
	}
	return nil
}

type NestedQuery struct {
	Path             *string    `protobuf:"bytes,1,opt,name=path" json:"path,omitempty"`
	Query            *Query     `protobuf:"bytes,2,opt,name=query" json:"query,omitempty"`
	ScoreMode        *ScoreMode `protobuf:"varint,3,opt,name=score_mode,json=scoreMode,enum=otsprotocol.ScoreMode" json:"score_mode,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *NestedQuery) Reset()                    { *m = NestedQuery{} }
func (m *NestedQuery) String() string            { return proto.CompactTextString(m) }
func (*NestedQuery) ProtoMessage()               {}
func (*NestedQuery) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{11} }

func (m *NestedQuery) GetPath() string {
	if m != nil && m.Path != nil {
		return *m.Path
	}
	return ""
}

func (m *NestedQuery) GetQuery() *Query {
	if m != nil {
		return m.Query
	}
	return nil
}

func (m *NestedQuery) GetScoreMode() ScoreMode {
	if m != nil && m.ScoreMode != nil {
		return *m.ScoreMode
	}
	return ScoreMode_SCORE_MODE_NONE
}

type GeoBoundingBoxQuery struct {
	FieldName        *string `protobuf:"bytes,1,opt,name=field_name,json=fieldName" json:"field_name,omitempty"`
	TopLeft          *string `protobuf:"bytes,2,opt,name=top_left,json=topLeft" json:"top_left,omitempty"`
	BottomRight      *string `protobuf:"bytes,3,opt,name=bottom_right,json=bottomRight" json:"bottom_right,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *GeoBoundingBoxQuery) Reset()                    { *m = GeoBoundingBoxQuery{} }
func (m *GeoBoundingBoxQuery) String() string            { return proto.CompactTextString(m) }
func (*GeoBoundingBoxQuery) ProtoMessage()               {}
func (*GeoBoundingBoxQuery) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{12} }

func (m *GeoBoundingBoxQuery) GetFieldName() string {
	if m != nil && m.FieldName != nil {
		return *m.FieldName
	}
	return ""
}

func (m *GeoBoundingBoxQuery) GetTopLeft() string {
	if m != nil && m.TopLeft != nil {
		return *m.TopLeft
	}
	return ""
}

func (m *GeoBoundingBoxQuery) GetBottomRight() string {
	if m != nil && m.BottomRight != nil {
		return *m.BottomRight
	}
	return ""
}

type GeoDistanceQuery struct {
	FieldName        *string  `protobuf:"bytes,1,opt,name=field_name,json=fieldName" json:"field_name,omitempty"`
	CenterPoint      *string  `protobuf:"bytes,2,opt,name=center_point,json=centerPoint" json:"center_point,omitempty"`
	Distance         *float64 `protobuf:"fixed64,3,opt,name=distance" json:"distance,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *GeoDistanceQuery) Reset()                    { *m = GeoDistanceQuery{} }
func (m *GeoDistanceQuery) String() string            { return proto.CompactTextString(m) }
func (*GeoDistanceQuery) ProtoMessage()               {}
func (*GeoDistanceQuery) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{13} }

func (m *GeoDistanceQuery) GetFieldName() string {
	if m != nil && m.FieldName != nil {
		return *m.FieldName
	}
	return ""
}

func (m *GeoDistanceQuery) GetCenterPoint() string {
	if m != nil && m.CenterPoint != nil {
		return *m.CenterPoint
	}
	return ""
}

func (m *GeoDistanceQuery) GetDistance() float64 {
	if m != nil && m.Distance != nil {
		return *m.Distance
	}
	return 0
}

type GeoPolygonQuery struct {
	FieldName        *string  `protobuf:"bytes,1,opt,name=field_name,json=fieldName" json:"field_name,omitempty"`
	Points           []string `protobuf:"bytes,2,rep,name=points" json:"points,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *GeoPolygonQuery) Reset()                    { *m = GeoPolygonQuery{} }
func (m *GeoPolygonQuery) String() string            { return proto.CompactTextString(m) }
func (*GeoPolygonQuery) ProtoMessage()               {}
func (*GeoPolygonQuery) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{14} }

func (m *GeoPolygonQuery) GetFieldName() string {
	if m != nil && m.FieldName != nil {
		return *m.FieldName
	}
	return ""
}

func (m *GeoPolygonQuery) GetPoints() []string {
	if m != nil {
		return m.Points
	}
	return nil
}

type Query struct {
	Type             *QueryType `protobuf:"varint,1,opt,name=type,enum=otsprotocol.QueryType" json:"type,omitempty"`
	Query            []byte     `protobuf:"bytes,2,opt,name=query" json:"query,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *Query) Reset()                    { *m = Query{} }
func (m *Query) String() string            { return proto.CompactTextString(m) }
func (*Query) ProtoMessage()               {}
func (*Query) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{15} }

func (m *Query) GetType() QueryType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return QueryType_MATCH_QUERY
}

func (m *Query) GetQuery() []byte {
	if m != nil {
		return m.Query
	}
	return nil
}

type Collapse struct {
	FieldName        *string `protobuf:"bytes,1,opt,name=field_name,json=fieldName" json:"field_name,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Collapse) Reset()                    { *m = Collapse{} }
func (m *Collapse) String() string            { return proto.CompactTextString(m) }
func (*Collapse) ProtoMessage()               {}
func (*Collapse) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{16} }

func (m *Collapse) GetFieldName() string {
	if m != nil && m.FieldName != nil {
		return *m.FieldName
	}
	return ""
}

type NestedFilter struct {
	Path             *string `protobuf:"bytes,1,opt,name=path" json:"path,omitempty"`
	Filter           *Query  `protobuf:"bytes,2,opt,name=filter" json:"filter,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *NestedFilter) Reset()                    { *m = NestedFilter{} }
func (m *NestedFilter) String() string            { return proto.CompactTextString(m) }
func (*NestedFilter) ProtoMessage()               {}
func (*NestedFilter) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{17} }

func (m *NestedFilter) GetPath() string {
	if m != nil && m.Path != nil {
		return *m.Path
	}
	return ""
}

func (m *NestedFilter) GetFilter() *Query {
	if m != nil {
		return m.Filter
	}
	return nil
}

type ScoreSort struct {
	Order            *SortOrder `protobuf:"varint,1,opt,name=order,enum=otsprotocol.SortOrder" json:"order,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *ScoreSort) Reset()                    { *m = ScoreSort{} }
func (m *ScoreSort) String() string            { return proto.CompactTextString(m) }
func (*ScoreSort) ProtoMessage()               {}
func (*ScoreSort) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{18} }

func (m *ScoreSort) GetOrder() SortOrder {
	if m != nil && m.Order != nil {
		return *m.Order
	}
	return SortOrder_SORT_ORDER_ASC
}

type FieldSort struct {
	FieldName        *string       `protobuf:"bytes,1,opt,name=field_name,json=fieldName" json:"field_name,omitempty"`
	Order            *SortOrder    `protobuf:"varint,2,opt,name=order,enum=otsprotocol.SortOrder" json:"order,omitempty"`
	Mode             *SortMode     `protobuf:"varint,3,opt,name=mode,enum=otsprotocol.SortMode" json:"mode,omitempty"`
	NestedFilter     *NestedFilter `protobuf:"bytes,4,opt,name=nested_filter,json=nestedFilter" json:"nested_filter,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *FieldSort) Reset()                    { *m = FieldSort{} }
func (m *FieldSort) String() string            { return proto.CompactTextString(m) }
func (*FieldSort) ProtoMessage()               {}
func (*FieldSort) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{19} }

func (m *FieldSort) GetFieldName() string {
	if m != nil && m.FieldName != nil {
		return *m.FieldName
	}
	return ""
}

func (m *FieldSort) GetOrder() SortOrder {
	if m != nil && m.Order != nil {
		return *m.Order
	}
	return SortOrder_SORT_ORDER_ASC
}

func (m *FieldSort) GetMode() SortMode {
	if m != nil && m.Mode != nil {
		return *m.Mode
	}
	return SortMode_SORT_MODE_MIN
}

func (m *FieldSort) GetNestedFilter() *NestedFilter {
	if m != nil {
		return m.NestedFilter
	}
	return nil
}

type GeoDistanceSort struct {
	FieldName        *string          `protobuf:"bytes,1,opt,name=field_name,json=fieldName" json:"field_name,omitempty"`
	Points           []string         `protobuf:"bytes,2,rep,name=points" json:"points,omitempty"`
	Order            *SortOrder       `protobuf:"varint,3,opt,name=order,enum=otsprotocol.SortOrder" json:"order,omitempty"`
	Mode             *SortMode        `protobuf:"varint,4,opt,name=mode,enum=otsprotocol.SortMode" json:"mode,omitempty"`
	DistanceType     *GeoDistanceType `protobuf:"varint,5,opt,name=distance_type,json=distanceType,enum=otsprotocol.GeoDistanceType" json:"distance_type,omitempty"`
	NestedFilter     *NestedFilter    `protobuf:"bytes,6,opt,name=nested_filter,json=nestedFilter" json:"nested_filter,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *GeoDistanceSort) Reset()                    { *m = GeoDistanceSort{} }
func (m *GeoDistanceSort) String() string            { return proto.CompactTextString(m) }
func (*GeoDistanceSort) ProtoMessage()               {}
func (*GeoDistanceSort) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{20} }

func (m *GeoDistanceSort) GetFieldName() string {
	if m != nil && m.FieldName != nil {
		return *m.FieldName
	}
	return ""
}

func (m *GeoDistanceSort) GetPoints() []string {
	if m != nil {
		return m.Points
	}
	return nil
}

func (m *GeoDistanceSort) GetOrder() SortOrder {
	if m != nil && m.Order != nil {
		return *m.Order
	}
	return SortOrder_SORT_ORDER_ASC
}

func (m *GeoDistanceSort) GetMode() SortMode {
	if m != nil && m.Mode != nil {
		return *m.Mode
	}
	return SortMode_SORT_MODE_MIN
}

func (m *GeoDistanceSort) GetDistanceType() GeoDistanceType {
	if m != nil && m.DistanceType != nil {
		return *m.DistanceType
	}
	return GeoDistanceType_GEO_DISTANCE_ARC
}

func (m *GeoDistanceSort) GetNestedFilter() *NestedFilter {
	if m != nil {
		return m.NestedFilter
	}
	return nil
}

type Sorter struct {
	FieldSort        *FieldSort       `protobuf:"bytes,1,opt,name=field_sort,json=fieldSort" json:"field_sort,omitempty"`
	GeoDistanceSort  *GeoDistanceSort `protobuf:"bytes,2,opt,name=geo_distance_sort,json=geoDistanceSort" json:"geo_distance_sort,omitempty"`
	ScoreSort        *ScoreSort       `protobuf:"bytes,3,opt,name=score_sort,json=scoreSort" json:"score_sort,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *Sorter) Reset()                    { *m = Sorter{} }
func (m *Sorter) String() string            { return proto.CompactTextString(m) }
func (*Sorter) ProtoMessage()               {}
func (*Sorter) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{21} }

func (m *Sorter) GetFieldSort() *FieldSort {
	if m != nil {
		return m.FieldSort
	}
	return nil
}

func (m *Sorter) GetGeoDistanceSort() *GeoDistanceSort {
	if m != nil {
		return m.GeoDistanceSort
	}
	return nil
}

func (m *Sorter) GetScoreSort() *ScoreSort {
	if m != nil {
		return m.ScoreSort
	}
	return nil
}

type Sort struct {
	Sorter           []*Sorter `protobuf:"bytes,1,rep,name=sorter" json:"sorter,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *Sort) Reset()                    { *m = Sort{} }
func (m *Sort) String() string            { return proto.CompactTextString(m) }
func (*Sort) ProtoMessage()               {}
func (*Sort) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{22} }

func (m *Sort) GetSorter() []*Sorter {
	if m != nil {
		return m.Sorter
	}
	return nil
}

type SearchAfter struct {
	Values           [][]byte `protobuf:"bytes,1,rep,name=values" json:"values,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *SearchAfter) Reset()                    { *m = SearchAfter{} }
func (m *SearchAfter) String() string            { return proto.CompactTextString(m) }
func (*SearchAfter) ProtoMessage()               {}
func (*SearchAfter) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{23} }

func (m *SearchAfter) GetValues() [][]byte {
	if m != nil {
		return m.Values
	}
	return nil
}

type SearchQuery struct {
	Offset           *int32       `protobuf:"varint,1,opt,name=offset" json:"offset,omitempty"`
	Limit            *int32       `protobuf:"varint,2,opt,name=limit" json:"limit,omitempty"`
	SearchAfter      *SearchAfter `protobuf:"bytes,3,opt,name=search_after,json=searchAfter" json:"search_after,omitempty"`
	Query            *Query       `protobuf:"bytes,4,opt,name=query" json:"query,omitempty"`
	Collapse         *Collapse    `protobuf:"bytes,5,opt,name=collapse" json:"collapse,omitempty"`
	Sort             *Sort        `protobuf:"bytes,6,opt,name=sort" json:"sort,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *SearchQuery) Reset()                    { *m = SearchQuery{} }
func (m *SearchQuery) String() string            { return proto.CompactTextString(m) }
func (*SearchQuery) ProtoMessage()               {}
func (*SearchQuery) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{24} }

func (m *SearchQuery) GetOffset() int32 {
	if m != nil && m.Offset != nil {
		return *m.Offset
	}
	return 0
}

func (m *SearchQuery) GetLimit() int32 {
	if m != nil && m.Limit != nil {
		return *m.Limit
	}
	return 0
}

func (m *SearchQuery) GetSearchAfter() *SearchAfter {
	if m != nil {
		return m.SearchAfter
	}
	return nil
}

func (m *SearchQuery) GetQuery() *Query {
	if m != nil {
		return m.Query
	}
	return nil
}

func (m *SearchQuery) GetCollapse() *Collapse {
	if m != nil {
		return m.Collapse
	}
	return nil
}

func (m *SearchQuery) GetSort() *Sort {
	if m != nil {
		return m.Sort
	}
	return nil
}

type ColumnsToGet struct {
	ReturnType       *ColumnReturnType `protobuf:"varint,1,opt,name=return_type,json=returnType,enum=otsprotocol.ColumnReturnType" json:"return_type,omitempty"`
	ColumnNames      []string          `protobuf:"bytes,2,rep,name=column_names,json=columnNames" json:"column_names,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *ColumnsToGet) Reset()                    { *m = ColumnsToGet{} }
func (m *ColumnsToGet) String() string            { return proto.CompactTextString(m) }
func (*ColumnsToGet) ProtoMessage()               {}
func (*ColumnsToGet) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{25} }

func (m *ColumnsToGet) GetReturnType() ColumnReturnType {
	if m != nil && m.ReturnType != nil {
		return *m.ReturnType
	}
	return ColumnReturnType_RETURN_ALL
}

func (m *ColumnsToGet) GetColumnNames() []string {
	if m != nil {
		return m.ColumnNames
	}
	return nil
}

type SearchRequest struct {
	TableName        *string       `protobuf:"bytes,1,opt,name=table_name,json=tableName" json:"table_name,omitempty"`
	IndexName        *string       `protobuf:"bytes,2,opt,name=index_name,json=indexName" json:"index_name,omitempty"`
	ColumnsToGet     *ColumnsToGet `protobuf:"bytes,3,opt,name=columns_to_get,json=columnsToGet" json:"columns_to_get,omitempty"`
	SearchQuery      []byte        `protobuf:"bytes,4,opt,name=search_query,json=searchQuery" json:"search_query,omitempty"`
	RoutingValues    [][]byte      `protobuf:"bytes,5,rep,name=routing_values,json=routingValues" json:"routing_values,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *SearchRequest) Reset()                    { *m = SearchRequest{} }
func (m *SearchRequest) String() string            { return proto.CompactTextString(m) }
func (*SearchRequest) ProtoMessage()               {}
func (*SearchRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{26} }

func (m *SearchRequest) GetTableName() string {
	if m != nil && m.TableName != nil {
		return *m.TableName
	}
	return ""
}

func (m *SearchRequest) GetIndexName() string {
	if m != nil && m.IndexName != nil {
		return *m.IndexName
	}
	return ""
}

func (m *SearchRequest) GetColumnsToGet() *ColumnsToGet {
	if m != nil {
		return m.ColumnsToGet
	}
	return nil
}

func (m *SearchRequest) GetSearchQuery() []byte {
	if m != nil {
		return m.SearchQuery
	}
	return nil
}

func (m *SearchRequest) GetRoutingValues() [][]byte {
	if m != nil {
		return m.RoutingValues
	}
	return nil
}

type SearchResponse struct {
	TotalHits        *int64   `protobuf:"varint,1,opt,name=total_hits,json=totalHits" json:"total_hits,omitempty"`
	Rows             [][]byte `protobuf:"bytes,2,rep,name=rows" json:"rows,omitempty"`
	IsAllSucceeded   *bool    `protobuf:"varint,3,opt,name=is_all_succeeded,json=isAllSucceeded" json:"is_all_succeeded,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *SearchResponse) Reset()                    { *m = SearchResponse{} }
func (m *SearchResponse) String() string            { return proto.CompactTextString(m) }
func (*SearchResponse) ProtoMessage()               {}
func (*SearchResponse) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{27} }

func (m *SearchResponse) GetTotalHits() int64 {
	if m != nil && m.TotalHits != nil {
		return *m.TotalHits
	}
	return 0
}

func (m *SearchResponse) GetRows() [][]byte {
	if m != nil {
		return m.Rows
	}
	return nil
}

func (m *SearchResponse) GetIsAllSucceeded() bool {
	if m != nil && m.IsAllSucceeded != nil {
		return *m.IsAllSucceeded
	}
	return false
}

type FieldSchema struct {
	FieldName        *string        `protobuf:"bytes,1,opt,name=field_name,json=fieldName" json:"field_name,omitempty"`
	FieldType        *FieldType     `protobuf:"varint,2,opt,name=field_type,json=fieldType,enum=otsprotocol.FieldType" json:"field_type,omitempty"`
	IndexOptions     *IndexOptions  `protobuf:"varint,3,opt,name=index_options,json=indexOptions,enum=otsprotocol.IndexOptions" json:"index_options,omitempty"`
	Analyzer         *string        `protobuf:"bytes,4,opt,name=analyzer" json:"analyzer,omitempty"`
	Index            *bool          `protobuf:"varint,5,opt,name=index" json:"index,omitempty"`
	DocValues        *bool          `protobuf:"varint,6,opt,name=doc_values,json=docValues" json:"doc_values,omitempty"`
	Store            *bool          `protobuf:"varint,7,opt,name=store" json:"store,omitempty"`
	FieldSchemas     []*FieldSchema `protobuf:"bytes,8,rep,name=field_schemas,json=fieldSchemas" json:"field_schemas,omitempty"`
	IsArray          *bool          `protobuf:"varint,9,opt,name=is_array,json=isArray" json:"is_array,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *FieldSchema) Reset()                    { *m = FieldSchema{} }
func (m *FieldSchema) String() string            { return proto.CompactTextString(m) }
func (*FieldSchema) ProtoMessage()               {}
func (*FieldSchema) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{28} }

func (m *FieldSchema) GetFieldName() string {
	if m != nil && m.FieldName != nil {
		return *m.FieldName
	}
	return ""
}

func (m *FieldSchema) GetFieldType() FieldType {
	if m != nil && m.FieldType != nil {
		return *m.FieldType
	}
	return FieldType_LONG
}

func (m *FieldSchema) GetIndexOptions() IndexOptions {
	if m != nil && m.IndexOptions != nil {
		return *m.IndexOptions
	}
	return IndexOptions_DOCS
}

func (m *FieldSchema) GetAnalyzer() string {
	if m != nil && m.Analyzer != nil {
		return *m.Analyzer
	}
	return ""
}

func (m *FieldSchema) GetIndex() bool {
	if m != nil && m.Index != nil {
		return *m.Index
	}
	return false
}

func (m *FieldSchema) GetDocValues() bool {
	if m != nil && m.DocValues != nil {
		return *m.DocValues
	}
	return false
}

func (m *FieldSchema) GetStore() bool {
	if m != nil && m.Store != nil {
		return *m.Store
	}
	return false
}

func (m *FieldSchema) GetFieldSchemas() []*FieldSchema {
	if m != nil {
		return m.FieldSchemas
	}
	return nil
}

func (m *FieldSchema) GetIsArray() bool {
	if m != nil && m.IsArray != nil {
		return *m.IsArray
	}
	return false
}

type IndexSchema struct {
	FieldSchemas     []*FieldSchema `protobuf:"bytes,1,rep,name=field_schemas,json=fieldSchemas" json:"field_schemas,omitempty"`
	IndexSetting     *IndexSetting  `protobuf:"bytes,2,opt,name=index_setting,json=indexSetting" json:"index_setting,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *IndexSchema) Reset()                    { *m = IndexSchema{} }
func (m *IndexSchema) String() string            { return proto.CompactTextString(m) }
func (*IndexSchema) ProtoMessage()               {}
func (*IndexSchema) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{29} }

func (m *IndexSchema) GetFieldSchemas() []*FieldSchema {
	if m != nil {
		return m.FieldSchemas
	}
	return nil
}

func (m *IndexSchema) GetIndexSetting() *IndexSetting {
	if m != nil {
		return m.IndexSetting
	}
	return nil
}

type IndexSetting struct {
	NumberOfShards       *int32   `protobuf:"varint,1,opt,name=number_of_shards,json=numberOfShards" json:"number_of_shards,omitempty"`
	RoutingFields        []string `protobuf:"bytes,2,rep,name=routing_fields,json=routingFields" json:"routing_fields,omitempty"`
	RoutingPartitionSize *int32   `protobuf:"varint,3,opt,name=routing_partition_size,json=routingPartitionSize" json:"routing_partition_size,omitempty"`
	XXX_unrecognized     []byte   `json:"-"`
}

func (m *IndexSetting) Reset()                    { *m = IndexSetting{} }
func (m *IndexSetting) String() string            { return proto.CompactTextString(m) }
func (*IndexSetting) ProtoMessage()               {}
func (*IndexSetting) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{30} }

func (m *IndexSetting) GetNumberOfShards() int32 {
	if m != nil && m.NumberOfShards != nil {
		return *m.NumberOfShards
	}
	return 0
}

func (m *IndexSetting) GetRoutingFields() []string {
	if m != nil {
		return m.RoutingFields
	}
	return nil
}

func (m *IndexSetting) GetRoutingPartitionSize() int32 {
	if m != nil && m.RoutingPartitionSize != nil {
		return *m.RoutingPartitionSize
	}
	return 0
}

type CreateSearchIndexRequest struct {
	TableName        *string      `protobuf:"bytes,1,req,name=table_name,json=tableName" json:"table_name,omitempty"`
	IndexName        *string      `protobuf:"bytes,2,req,name=index_name,json=indexName" json:"index_name,omitempty"`
	Schema           *IndexSchema `protobuf:"bytes,3,opt,name=schema" json:"schema,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *CreateSearchIndexRequest) Reset()                    { *m = CreateSearchIndexRequest{} }
func (m *CreateSearchIndexRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateSearchIndexRequest) ProtoMessage()               {}
func (*CreateSearchIndexRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{31} }

func (m *CreateSearchIndexRequest) GetTableName() string {
	if m != nil && m.TableName != nil {
		return *m.TableName
	}
	return ""
}

func (m *CreateSearchIndexRequest) GetIndexName() string {
	if m != nil && m.IndexName != nil {
		return *m.IndexName
	}
	return ""
}

func (m *CreateSearchIndexRequest) GetSchema() *IndexSchema {
	if m != nil {
		return m.Schema
	}
	return nil
}

type CreateSearchIndexResponse struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CreateSearchIndexResponse) Reset()                    { *m = CreateSearchIndexResponse{} }
func (m *CreateSearchIndexResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateSearchIndexResponse) ProtoMessage()               {}
func (*CreateSearchIndexResponse) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{32} }

type IndexInfo struct {
	TableName        *string `protobuf:"bytes,1,opt,name=table_name,json=tableName" json:"table_name,omitempty"`
	IndexName        *string `protobuf:"bytes,2,opt,name=index_name,json=indexName" json:"index_name,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *IndexInfo) Reset()                    { *m = IndexInfo{} }
func (m *IndexInfo) String() string            { return proto.CompactTextString(m) }
func (*IndexInfo) ProtoMessage()               {}
func (*IndexInfo) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{33} }

func (m *IndexInfo) GetTableName() string {
	if m != nil && m.TableName != nil {
		return *m.TableName
	}
	return ""
}

func (m *IndexInfo) GetIndexName() string {
	if m != nil && m.IndexName != nil {
		return *m.IndexName
	}
	return ""
}

type ListSearchIndexRequest struct {
	TableName        *string `protobuf:"bytes,1,opt,name=table_name,json=tableName" json:"table_name,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ListSearchIndexRequest) Reset()                    { *m = ListSearchIndexRequest{} }
func (m *ListSearchIndexRequest) String() string            { return proto.CompactTextString(m) }
func (*ListSearchIndexRequest) ProtoMessage()               {}
func (*ListSearchIndexRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{34} }

func (m *ListSearchIndexRequest) GetTableName() string {
	if m != nil && m.TableName != nil {
		return *m.TableName
	}
	return ""
}

type ListSearchIndexResponse struct {
	Indices          []*IndexInfo `protobuf:"bytes,1,rep,name=indices" json:"indices,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *ListSearchIndexResponse) Reset()                    { *m = ListSearchIndexResponse{} }
func (m *ListSearchIndexResponse) String() string            { return proto.CompactTextString(m) }
func (*ListSearchIndexResponse) ProtoMessage()               {}
func (*ListSearchIndexResponse) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{35} }

func (m *ListSearchIndexResponse) GetIndices() []*IndexInfo {
	if m != nil {
		return m.Indices
	}
	return nil
}

type DeleteSearchIndexRequest struct {
	TableName        *string `protobuf:"bytes,1,opt,name=table_name,json=tableName" json:"table_name,omitempty"`
	IndexName        *string `protobuf:"bytes,2,opt,name=index_name,json=indexName" json:"index_name,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *DeleteSearchIndexRequest) Reset()                    { *m = DeleteSearchIndexRequest{} }
func (m *DeleteSearchIndexRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteSearchIndexRequest) ProtoMessage()               {}
func (*DeleteSearchIndexRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{36} }

func (m *DeleteSearchIndexRequest) GetTableName() string {
	if m != nil && m.TableName != nil {
		return *m.TableName
	}
	return ""
}

func (m *DeleteSearchIndexRequest) GetIndexName() string {
	if m != nil && m.IndexName != nil {
		return *m.IndexName
	}
	return ""
}

type DeleteSearchIndexResponse struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *DeleteSearchIndexResponse) Reset()                    { *m = DeleteSearchIndexResponse{} }
func (m *DeleteSearchIndexResponse) String() string            { return proto.CompactTextString(m) }
func (*DeleteSearchIndexResponse) ProtoMessage()               {}
func (*DeleteSearchIndexResponse) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{37} }

type SyncStat struct {
	SyncPhase            *SyncPhase `protobuf:"varint,1,opt,name=sync_phase,json=syncPhase,enum=otsprotocol.SyncPhase" json:"sync_phase,omitempty"`
	CurrentSyncTimestamp *int64     `protobuf:"varint,2,opt,name=current_sync_timestamp,json=currentSyncTimestamp" json:"current_sync_timestamp,omitempty"`
	XXX_unrecognized     []byte     `json:"-"`
}

func (m *SyncStat) Reset()                    { *m = SyncStat{} }
func (m *SyncStat) String() string            { return proto.CompactTextString(m) }
func (*SyncStat) ProtoMessage()               {}
func (*SyncStat) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{38} }

func (m *SyncStat) GetSyncPhase() SyncPhase {
	if m != nil && m.SyncPhase != nil {
		return *m.SyncPhase
	}
	return SyncPhase_FULL
}

func (m *SyncStat) GetCurrentSyncTimestamp() int64 {
	if m != nil && m.CurrentSyncTimestamp != nil {
		return *m.CurrentSyncTimestamp
	}
	return 0
}

type DescribeSearchIndexRequest struct {
	TableName        *string `protobuf:"bytes,1,opt,name=table_name,json=tableName" json:"table_name,omitempty"`
	IndexName        *string `protobuf:"bytes,2,opt,name=index_name,json=indexName" json:"index_name,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *DescribeSearchIndexRequest) Reset()                    { *m = DescribeSearchIndexRequest{} }
func (m *DescribeSearchIndexRequest) String() string            { return proto.CompactTextString(m) }
func (*DescribeSearchIndexRequest) ProtoMessage()               {}
func (*DescribeSearchIndexRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{39} }

func (m *DescribeSearchIndexRequest) GetTableName() string {
	if m != nil && m.TableName != nil {
		return *m.TableName
	}
	return ""
}

func (m *DescribeSearchIndexRequest) GetIndexName() string {
	if m != nil && m.IndexName != nil {
		return *m.IndexName
	}
	return ""
}

type DescribeSearchIndexResponse struct {
	Schema           *IndexSchema `protobuf:"bytes,1,opt,name=schema" json:"schema,omitempty"`
	SyncStat         *SyncStat    `protobuf:"bytes,2,opt,name=sync_stat,json=syncStat" json:"sync_stat,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *DescribeSearchIndexResponse) Reset()                    { *m = DescribeSearchIndexResponse{} }
func (m *DescribeSearchIndexResponse) String() string            { return proto.CompactTextString(m) }
func (*DescribeSearchIndexResponse) ProtoMessage()               {}
func (*DescribeSearchIndexResponse) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{40} }

func (m *DescribeSearchIndexResponse) GetSchema() *IndexSchema {
	if m != nil {
		return m.Schema
	}
	return nil
}

func (m *DescribeSearchIndexResponse) GetSyncStat() *SyncStat {
	if m != nil {
		return m.SyncStat
	}
	return nil
}

func init() {
	proto.RegisterType((*MatchQuery)(nil), "otsprotocol.MatchQuery")
	proto.RegisterType((*MatchPhraseQuery)(nil), "otsprotocol.MatchPhraseQuery")
	proto.RegisterType((*MatchAllQuery)(nil), "otsprotocol.MatchAllQuery")
	proto.RegisterType((*TermQuery)(nil), "otsprotocol.TermQuery")
	proto.RegisterType((*RangeQuery)(nil), "otsprotocol.RangeQuery")
	proto.RegisterType((*PrefixQuery)(nil), "otsprotocol.PrefixQuery")
	proto.RegisterType((*WildcardQuery)(nil), "otsprotocol.WildcardQuery")
	proto.RegisterType((*BoolQuery)(nil), "otsprotocol.BoolQuery")
	proto.RegisterType((*ConstScoreQuery)(nil), "otsprotocol.ConstScoreQuery")
	proto.RegisterType((*FieldValueFactor)(nil), "otsprotocol.FieldValueFactor")
	proto.RegisterType((*FunctionScoreQuery)(nil), "otsprotocol.FunctionScoreQuery")
	proto.RegisterType((*NestedQuery)(nil), "otsprotocol.NestedQuery")
	proto.RegisterType((*GeoBoundingBoxQuery)(nil), "otsprotocol.GeoBoundingBoxQuery")
	proto.RegisterType((*GeoDistanceQuery)(nil), "otsprotocol.GeoDistanceQuery")
	proto.RegisterType((*GeoPolygonQuery)(nil), "otsprotocol.GeoPolygonQuery")
	proto.RegisterType((*Query)(nil), "otsprotocol.Query")
	proto.RegisterType((*Collapse)(nil), "otsprotocol.Collapse")
	proto.RegisterType((*NestedFilter)(nil), "otsprotocol.NestedFilter")
	proto.RegisterType((*ScoreSort)(nil), "otsprotocol.ScoreSort")
	proto.RegisterType((*FieldSort)(nil), "otsprotocol.FieldSort")
	proto.RegisterType((*GeoDistanceSort)(nil), "otsprotocol.GeoDistanceSort")
	proto.RegisterType((*Sorter)(nil), "otsprotocol.Sorter")
	proto.RegisterType((*Sort)(nil), "otsprotocol.Sort")
	proto.RegisterType((*SearchAfter)(nil), "otsprotocol.SearchAfter")
	proto.RegisterType((*SearchQuery)(nil), "otsprotocol.SearchQuery")
	proto.RegisterType((*ColumnsToGet)(nil), "otsprotocol.ColumnsToGet")
	proto.RegisterType((*SearchRequest)(nil), "otsprotocol.SearchRequest")
	proto.RegisterType((*SearchResponse)(nil), "otsprotocol.SearchResponse")
	proto.RegisterType((*FieldSchema)(nil), "otsprotocol.FieldSchema")
	proto.RegisterType((*IndexSchema)(nil), "otsprotocol.IndexSchema")
	proto.RegisterType((*IndexSetting)(nil), "otsprotocol.IndexSetting")
	proto.RegisterType((*CreateSearchIndexRequest)(nil), "otsprotocol.CreateSearchIndexRequest")
	proto.RegisterType((*CreateSearchIndexResponse)(nil), "otsprotocol.CreateSearchIndexResponse")
	proto.RegisterType((*IndexInfo)(nil), "otsprotocol.IndexInfo")
	proto.RegisterType((*ListSearchIndexRequest)(nil), "otsprotocol.ListSearchIndexRequest")
	proto.RegisterType((*ListSearchIndexResponse)(nil), "otsprotocol.ListSearchIndexResponse")
	proto.RegisterType((*DeleteSearchIndexRequest)(nil), "otsprotocol.DeleteSearchIndexRequest")
	proto.RegisterType((*DeleteSearchIndexResponse)(nil), "otsprotocol.DeleteSearchIndexResponse")
	proto.RegisterType((*SyncStat)(nil), "otsprotocol.SyncStat")
	proto.RegisterType((*DescribeSearchIndexRequest)(nil), "otsprotocol.DescribeSearchIndexRequest")
	proto.RegisterType((*DescribeSearchIndexResponse)(nil), "otsprotocol.DescribeSearchIndexResponse")
	proto.RegisterEnum("otsprotocol.QueryType", QueryType_name, QueryType_value)
	proto.RegisterEnum("otsprotocol.ScoreMode", ScoreMode_name, ScoreMode_value)
	proto.RegisterEnum("otsprotocol.SortOrder", SortOrder_name, SortOrder_value)
	proto.RegisterEnum("otsprotocol.SortMode", SortMode_name, SortMode_value)
	proto.RegisterEnum("otsprotocol.GeoDistanceType", GeoDistanceType_name, GeoDistanceType_value)
	proto.RegisterEnum("otsprotocol.ColumnReturnType", ColumnReturnType_name, ColumnReturnType_value)
	proto.RegisterEnum("otsprotocol.IndexOptions", IndexOptions_name, IndexOptions_value)
	proto.RegisterEnum("otsprotocol.FieldType", FieldType_name, FieldType_value)
	proto.RegisterEnum("otsprotocol.SyncPhase", SyncPhase_name, SyncPhase_value)
}

func init() { proto.RegisterFile("search.proto", fileDescriptor2) }

var fileDescriptor2 = []byte{
	// 2119 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x57, 0xdd, 0x72, 0x1b, 0x4b,
	0x11, 0x3e, 0x2b, 0x4b, 0xb2, 0xb6, 0x25, 0xd9, 0x9b, 0x89, 0x63, 0xe4, 0x84, 0x14, 0xc9, 0x52,
	0xa9, 0xca, 0x31, 0x54, 0x2a, 0x27, 0x9c, 0x53, 0xd4, 0x29, 0x38, 0x49, 0xc9, 0xfa, 0x71, 0x54,
	0xb1, 0xb5, 0xca, 0xac, 0x9c, 0x1f, 0x6e, 0x96, 0x8d, 0x34, 0xb2, 0xb7, 0x6a, 0xb5, 0xa3, 0xec,
	0x8c, 0x48, 0x9c, 0x4b, 0xb8, 0x03, 0x6e, 0x79, 0x03, 0x2e, 0xb8, 0x82, 0x57, 0xa0, 0x8a, 0x97,
	0xe0, 0x01, 0x78, 0x0c, 0x2e, 0xa8, 0xe9, 0x99, 0x95, 0x25, 0x59, 0x3e, 0x56, 0x80, 0xbb, 0xed,
	0x9e, 0xaf, 0x7b, 0xba, 0x7b, 0xbe, 0xee, 0x99, 0x85, 0x8a, 0x60, 0x61, 0x3a, 0x38, 0x7b, 0x34,
	0x49, 0xb9, 0xe4, 0xa4, 0xcc, 0xa5, 0xc0, 0xaf, 0x01, 0x8f, 0xdd, 0x67, 0x00, 0xc7, 0xa1, 0x1c,
	0x9c, 0xbd, 0x9c, 0xb2, 0xf4, 0x9c, 0xdc, 0x05, 0x18, 0x45, 0x2c, 0x1e, 0x06, 0x49, 0x38, 0x66,
	0x35, 0xeb, 0x9e, 0xf5, 0xd0, 0xa6, 0x36, 0x6a, 0xba, 0xe1, 0x98, 0x11, 0x02, 0x79, 0xc9, 0x3e,
	0xca, 0x5a, 0x0e, 0x17, 0xf0, 0xdb, 0x6d, 0x81, 0x83, 0x0e, 0x7a, 0x67, 0x69, 0x28, 0xd8, 0x7f,
	0xed, 0x66, 0x1b, 0xaa, 0xe8, 0xa6, 0x1e, 0xc7, 0xe8, 0xc3, 0x7d, 0x0a, 0x76, 0x9f, 0xa5, 0xe3,
	0xf5, 0x1d, 0xa6, 0x63, 0x74, 0x58, 0xa1, 0xf8, 0xed, 0xfe, 0xcd, 0x02, 0xa0, 0x61, 0x72, 0xba,
	0x5e, 0x48, 0x77, 0x01, 0x52, 0x05, 0x0e, 0x46, 0x29, 0xcf, 0xfc, 0xd8, 0xa8, 0x69, 0xa7, 0x7c,
	0x4c, 0xf6, 0xa0, 0xa4, 0x97, 0x25, 0xaf, 0x6d, 0xe0, 0xe2, 0x26, 0xca, 0x7d, 0x4e, 0x7e, 0x0c,
	0xd5, 0x28, 0x19, 0xc4, 0xd3, 0x21, 0x0b, 0x62, 0xfe, 0x81, 0xa5, 0xb5, 0xfc, 0x3d, 0xeb, 0x61,
	0x89, 0x56, 0x8c, 0xf2, 0x48, 0xe9, 0xe6, 0x41, 0xd3, 0xc9, 0x84, 0xa5, 0xb5, 0xc2, 0x02, 0xe8,
	0x44, 0xe9, 0xdc, 0x26, 0x94, 0x7b, 0x29, 0x1b, 0x45, 0x1f, 0xd7, 0x8a, 0x78, 0x17, 0x8a, 0x13,
	0x44, 0x9b, 0x32, 0x1a, 0xc9, 0x6d, 0x42, 0xf5, 0x75, 0x14, 0x0f, 0x07, 0x61, 0x3a, 0x5c, 0xcb,
	0xcf, 0x0e, 0x14, 0x7e, 0x13, 0xc6, 0x53, 0x66, 0xdc, 0x68, 0xc1, 0xfd, 0x4b, 0x0e, 0xec, 0x03,
	0xce, 0xf5, 0x59, 0x90, 0x6f, 0xa0, 0x32, 0x9e, 0x0a, 0x19, 0xbc, 0x9f, 0xb2, 0x34, 0x62, 0xa2,
	0x66, 0xdd, 0xdb, 0x78, 0x58, 0x7e, 0x42, 0x1e, 0xcd, 0x11, 0xe9, 0x11, 0x22, 0x69, 0x59, 0xe1,
	0x5e, 0x6a, 0x18, 0xf9, 0x25, 0x38, 0x68, 0x96, 0xf0, 0x0b, 0xd3, 0xdc, 0x95, 0xa6, 0x5b, 0x0a,
	0xdb, 0xe5, 0x33, 0xeb, 0x6f, 0x61, 0x6b, 0x14, 0xc5, 0x92, 0xa5, 0x33, 0xdb, 0x8d, 0x2b, 0x6d,
	0xab, 0x1a, 0x39, 0x67, 0x2a, 0xce, 0xf8, 0x34, 0x1e, 0xce, 0x4c, 0xf3, 0x57, 0x9b, 0x6a, 0x64,
	0x66, 0xfa, 0x18, 0x76, 0xc6, 0x51, 0x12, 0x8d, 0xa7, 0xe3, 0xc0, 0xb8, 0x18, 0x2b, 0x5a, 0xe2,
	0x81, 0x15, 0x28, 0x31, 0x6b, 0x3e, 0x2e, 0x21, 0x61, 0xdd, 0xef, 0x60, 0xbb, 0xc1, 0x13, 0x21,
	0xfd, 0x01, 0x4f, 0x0d, 0xd9, 0xf6, 0xa1, 0xa8, 0x03, 0xc2, 0x72, 0xaf, 0xde, 0xd7, 0x20, 0xdc,
	0xaf, 0xc0, 0x69, 0xab, 0xc3, 0x78, 0xa5, 0xea, 0xde, 0x0e, 0x07, 0x92, 0xa7, 0xd7, 0x1c, 0x99,
	0xfb, 0x07, 0x0b, 0x48, 0x7b, 0x9a, 0x0c, 0x64, 0xc4, 0x93, 0xb9, 0x5d, 0x1f, 0x42, 0x41, 0xa5,
	0x7b, 0xfe, 0x3d, 0x9b, 0x6a, 0x00, 0x79, 0x01, 0x44, 0xfb, 0xc7, 0xc3, 0x0e, 0x46, 0xb8, 0x2b,
	0x12, 0xa0, 0xfc, 0xe4, 0xee, 0x82, 0xd9, 0x72, 0x68, 0xd4, 0x19, 0x2d, 0x69, 0xdc, 0xdf, 0x5a,
	0x50, 0xee, 0x32, 0x21, 0x99, 0xe1, 0x1b, 0x81, 0xfc, 0x24, 0x94, 0x67, 0x26, 0x6c, 0xfc, 0xbe,
	0x08, 0x2d, 0x77, 0x5d, 0x68, 0xdf, 0x00, 0x08, 0x95, 0x52, 0x30, 0xe6, 0x43, 0x86, 0xbd, 0xb6,
	0xf5, 0x64, 0x77, 0x01, 0x8e, 0x19, 0x1f, 0xf3, 0x21, 0xa3, 0xb6, 0xc8, 0x3e, 0xdd, 0x14, 0x6e,
	0x1e, 0x32, 0x7e, 0xc0, 0xa7, 0xc9, 0x30, 0x4a, 0x4e, 0x0f, 0xf8, 0x7a, 0x3d, 0xb4, 0x07, 0x25,
	0xc9, 0x27, 0x41, 0xcc, 0x46, 0xd9, 0x30, 0xda, 0x94, 0x7c, 0x72, 0xc4, 0x46, 0x92, 0xdc, 0x87,
	0xca, 0x3b, 0x2e, 0x25, 0x1f, 0x07, 0x69, 0x74, 0x7a, 0x26, 0x31, 0x12, 0x9b, 0x96, 0xb5, 0x8e,
	0x2a, 0x95, 0x3b, 0x01, 0xe7, 0x90, 0xf1, 0x66, 0x24, 0x64, 0x98, 0x0c, 0xd6, 0x1b, 0x33, 0xf7,
	0xa1, 0x32, 0x60, 0x89, 0xe2, 0xf4, 0x84, 0x47, 0x49, 0xb6, 0x69, 0x59, 0xeb, 0x7a, 0x4a, 0x45,
	0x6e, 0x43, 0x69, 0x68, 0x5c, 0xe2, 0xa6, 0x16, 0x9d, 0xc9, 0xee, 0x73, 0xd8, 0x3e, 0x64, 0xbc,
	0xc7, 0xe3, 0xf3, 0x53, 0x9e, 0xac, 0x3d, 0x25, 0x94, 0x5b, 0xdd, 0x78, 0x6a, 0x4a, 0xa0, 0xe4,
	0x76, 0xa0, 0x90, 0x51, 0x35, 0x2f, 0xcf, 0x27, 0xda, 0x72, 0xb9, 0xd2, 0x88, 0xe8, 0x9f, 0x4f,
	0x18, 0x45, 0x8c, 0x1a, 0x15, 0x17, 0xa7, 0x58, 0x31, 0x27, 0xe6, 0x7e, 0x09, 0xa5, 0x06, 0x8f,
	0xe3, 0x70, 0x22, 0xd8, 0x75, 0xc4, 0xed, 0x42, 0x45, 0x33, 0xa5, 0x8d, 0xdc, 0x5f, 0x49, 0x95,
	0x8b, 0xde, 0xc9, 0x5d, 0xdb, 0x3b, 0xdf, 0x82, 0x8d, 0x6c, 0xf0, 0x79, 0x2a, 0xc9, 0x4f, 0xa1,
	0xc0, 0xd3, 0xa1, 0xe9, 0xb9, 0x4b, 0xa4, 0xe1, 0xa9, 0xf4, 0xd4, 0x2a, 0xd5, 0x20, 0xf7, 0x1f,
	0x16, 0xd8, 0x48, 0x6e, 0xb4, 0xbd, 0xa6, 0x8a, 0x33, 0xd7, 0xb9, 0x35, 0x5c, 0x93, 0x2f, 0x21,
	0x3f, 0x47, 0xde, 0x5b, 0x97, 0xc0, 0xc8, 0x5d, 0x84, 0x90, 0xa7, 0x50, 0x4d, 0xb0, 0x20, 0x81,
	0xc9, 0x39, 0x8f, 0x39, 0xef, 0x2d, 0xd8, 0xcc, 0x97, 0x8c, 0x56, 0x92, 0x39, 0xc9, 0xfd, 0x73,
	0x0e, 0x19, 0x91, 0x71, 0x70, 0x9d, 0x5c, 0xae, 0x60, 0xc4, 0x45, 0x8e, 0x1b, 0x9f, 0x93, 0x63,
	0xfe, 0xfa, 0x1c, 0xeb, 0x50, 0xcd, 0x08, 0x1c, 0x20, 0xd5, 0x0a, 0x68, 0xf3, 0xc3, 0x05, 0x9b,
	0xb9, 0x24, 0x90, 0x70, 0x95, 0xe1, 0x9c, 0x74, 0xb9, 0x4c, 0xc5, 0xcf, 0x2b, 0xd3, 0xdf, 0x2d,
	0x28, 0xaa, 0xa8, 0x58, 0xaa, 0xe6, 0x8b, 0xae, 0x8e, 0xe0, 0xa9, 0x34, 0x93, 0x72, 0xf7, 0xf2,
	0xc8, 0x53, 0x68, 0x53, 0x35, 0x2c, 0xea, 0x73, 0xb8, 0x71, 0xca, 0x78, 0x30, 0x4b, 0x04, 0xad,
	0x35, 0x41, 0xaf, 0x4c, 0x04, 0x7d, 0x6c, 0x9f, 0x2e, 0x1d, 0xcf, 0x6c, 0xc0, 0xa1, 0x8b, 0x8d,
	0x15, 0x01, 0xcc, 0x28, 0x6d, 0x06, 0x9c, 0xfa, 0x74, 0x7f, 0x06, 0x79, 0x34, 0xff, 0x09, 0x14,
	0x05, 0x66, 0x62, 0x2e, 0xe1, 0x9b, 0x97, 0x4a, 0xcf, 0x52, 0x6a, 0x20, 0xee, 0x03, 0x28, 0xfb,
	0xf8, 0xf2, 0xab, 0x8f, 0x54, 0xee, 0xbb, 0x50, 0xc4, 0x81, 0xaf, 0x2f, 0xf0, 0x0a, 0x35, 0x92,
	0xfb, 0x6f, 0x2b, 0xc3, 0xe9, 0x99, 0xb0, 0x0b, 0x45, 0x3e, 0x1a, 0x09, 0xa6, 0xeb, 0x53, 0xa0,
	0x46, 0x52, 0xfd, 0x1f, 0x47, 0xe3, 0x48, 0x27, 0x5e, 0xa0, 0x5a, 0x20, 0xbf, 0xc8, 0x9e, 0x97,
	0x41, 0xa8, 0x76, 0x31, 0x29, 0xd5, 0x16, 0xe3, 0xba, 0x88, 0x82, 0x96, 0xc5, 0x5c, 0x48, 0xb3,
	0x8b, 0x21, 0x7f, 0xdd, 0xc5, 0xf0, 0x15, 0x94, 0x06, 0x66, 0xcc, 0x20, 0x83, 0xca, 0x4b, 0xac,
	0xcb, 0x66, 0x10, 0x9d, 0xc1, 0xc8, 0x03, 0xc8, 0x63, 0x91, 0x35, 0x5b, 0x6e, 0x5c, 0xaa, 0x14,
	0xc5, 0x65, 0xf7, 0x3d, 0x54, 0x1a, 0x3c, 0x9e, 0x8e, 0x13, 0xd1, 0xe7, 0x87, 0x4c, 0x92, 0xa7,
	0x50, 0x4e, 0x99, 0x9c, 0xa6, 0x49, 0x30, 0x37, 0x19, 0xef, 0x2e, 0x6f, 0x36, 0x1d, 0x27, 0x14,
	0x51, 0xc8, 0x57, 0x48, 0x67, 0xdf, 0x38, 0xe4, 0x71, 0x1d, 0x3b, 0x30, 0xeb, 0xb3, 0xb2, 0xd6,
	0xa9, 0x1e, 0x14, 0xee, 0x3f, 0x2d, 0xa8, 0xea, 0x9a, 0x50, 0xf6, 0x7e, 0xca, 0x04, 0x76, 0xad,
	0x0c, 0xdf, 0xc5, 0x6c, 0xa1, 0x6b, 0x51, 0x93, 0xbd, 0x4f, 0xa3, 0x64, 0xc8, 0x3e, 0xea, 0x65,
	0x7d, 0x6d, 0xd8, 0xa8, 0xc1, 0xe5, 0x67, 0xb0, 0xa5, 0xdd, 0x8b, 0x40, 0xf2, 0xe0, 0x94, 0x65,
	0xc4, 0xda, 0x5b, 0x11, 0xb5, 0xce, 0x92, 0x9a, 0x18, 0x4d, 0xce, 0xf7, 0x67, 0x87, 0x78, 0x71,
	0x1c, 0x95, 0xec, 0xa8, 0x34, 0x2b, 0x1e, 0xc0, 0x56, 0xca, 0xa7, 0x32, 0x4a, 0x4e, 0x03, 0xc3,
	0xa2, 0x02, 0xb2, 0xa8, 0x6a, 0xb4, 0xaf, 0x34, 0x99, 0xc6, 0xb0, 0x95, 0x65, 0x26, 0x26, 0x3c,
	0xd1, 0x97, 0x82, 0xe4, 0x32, 0x8c, 0x83, 0xb3, 0x48, 0x0a, 0x4c, 0x6d, 0x83, 0xda, 0xa8, 0x79,
	0x1e, 0x49, 0xa1, 0x2e, 0x81, 0x94, 0x7f, 0xd0, 0x65, 0xaa, 0x50, 0xfc, 0x26, 0x0f, 0xc1, 0x89,
	0x44, 0x10, 0xc6, 0x71, 0x20, 0xa6, 0x83, 0x01, 0x63, 0x43, 0x36, 0xc4, 0x8c, 0x4a, 0x74, 0x2b,
	0x12, 0xf5, 0x38, 0xf6, 0x33, 0xad, 0xfb, 0xaf, 0x1c, 0x94, 0x75, 0xc7, 0x0e, 0xce, 0xd8, 0x38,
	0xbc, 0x6e, 0xfa, 0xcd, 0xda, 0x1f, 0x8f, 0x76, 0xd5, 0x38, 0x47, 0x67, 0x78, 0xa6, 0xda, 0x2c,
	0x1b, 0x40, 0xba, 0xfc, 0x7c, 0xa2, 0x1e, 0x5d, 0xc2, 0x0c, 0xc9, 0xc5, 0xf2, 0x76, 0x14, 0xc2,
	0xd3, 0x00, 0xf5, 0xb4, 0xbf, 0x90, 0xd4, 0xa5, 0x1e, 0x26, 0x61, 0x7c, 0xfe, 0xc9, 0x8c, 0x78,
	0x9b, 0xce, 0x64, 0xd5, 0x55, 0x88, 0x35, 0xff, 0x04, 0x5a, 0x50, 0x79, 0x0c, 0xf9, 0x20, 0xab,
	0x74, 0x11, 0x97, 0xec, 0x21, 0x1f, 0xe8, 0x2a, 0x2b, 0x23, 0x21, 0x79, 0xca, 0x6a, 0x9b, 0xda,
	0x08, 0x05, 0xf2, 0x1d, 0x54, 0xcd, 0x70, 0xc3, 0x62, 0x88, 0x5a, 0x09, 0x67, 0x44, 0x6d, 0xc5,
	0x7c, 0x43, 0x00, 0xad, 0x8c, 0x2e, 0x04, 0xa1, 0x9e, 0x43, 0xaa, 0xea, 0x69, 0x1a, 0x9e, 0xd7,
	0x6c, 0xf4, 0xbb, 0x19, 0x89, 0xba, 0x12, 0xdd, 0x3f, 0x5a, 0x50, 0xc6, 0xfc, 0x4c, 0x99, 0x2f,
	0xed, 0x64, 0x7d, 0xd6, 0x4e, 0xb3, 0x7a, 0x0a, 0x26, 0x15, 0x77, 0xcc, 0x28, 0x5d, 0x51, 0x4f,
	0x5f, 0x03, 0x4c, 0x3d, 0x8d, 0xe4, 0xfe, 0xc9, 0x82, 0xca, 0xfc, 0xb2, 0x22, 0x4c, 0x32, 0x1d,
	0xbf, 0x63, 0x69, 0xc0, 0x47, 0x81, 0x38, 0x0b, 0xd3, 0xa1, 0x30, 0xc3, 0x6b, 0x4b, 0xeb, 0xbd,
	0x91, 0x8f, 0xda, 0x79, 0x1a, 0x63, 0x48, 0x59, 0x7f, 0x66, 0x34, 0xc6, 0xa0, 0x05, 0xf9, 0x1a,
	0x76, 0x33, 0xd8, 0x24, 0x4c, 0x65, 0xa4, 0xce, 0x31, 0x10, 0xd1, 0x27, 0x7d, 0xad, 0x17, 0xe8,
	0x8e, 0x59, 0xed, 0x65, 0x8b, 0x7e, 0xf4, 0x89, 0xb9, 0xbf, 0xb7, 0xa0, 0xd6, 0x48, 0x59, 0x28,
	0x99, 0xee, 0x01, 0x8c, 0xf1, 0xaa, 0x16, 0xcf, 0x7d, 0x7f, 0x8b, 0xe7, 0x16, 0x5b, 0xfc, 0x31,
	0x14, 0x75, 0xad, 0x57, 0x0e, 0xd8, 0xb9, 0xb3, 0xa1, 0x06, 0xe7, 0xde, 0x81, 0xbd, 0x15, 0xb1,
	0xe8, 0xa6, 0x74, 0x3b, 0x60, 0xa3, 0xa2, 0x93, 0x8c, 0xf8, 0xff, 0x36, 0x7c, 0xdc, 0x9f, 0xc3,
	0xee, 0x51, 0x24, 0xe4, 0x1a, 0x19, 0x2f, 0xfa, 0x75, 0x5f, 0xc0, 0x0f, 0x2e, 0x19, 0x9a, 0x99,
	0xf1, 0x18, 0x36, 0xa3, 0x64, 0x18, 0x0d, 0x66, 0x3f, 0x9b, 0xbb, 0x97, 0xd3, 0x55, 0xa1, 0xd3,
	0x0c, 0xe6, 0xbe, 0x81, 0x5a, 0x93, 0xc5, 0x6c, 0xad, 0xca, 0x7f, 0x5e, 0x7e, 0x77, 0x60, 0x6f,
	0x85, 0x67, 0x53, 0xc7, 0x0f, 0x50, 0xf2, 0xcf, 0x93, 0x81, 0x2f, 0x43, 0x7d, 0xb5, 0x9f, 0x27,
	0x83, 0x60, 0x72, 0x16, 0x8a, 0xd5, 0x2f, 0x6a, 0x05, 0xed, 0xa9, 0x55, 0x6a, 0x8b, 0xec, 0x53,
	0x51, 0x6d, 0x30, 0x4d, 0x53, 0x96, 0xc8, 0x00, 0xcd, 0x65, 0x34, 0x66, 0x42, 0x86, 0xe3, 0x09,
	0x86, 0xb2, 0x41, 0x77, 0xcc, 0xaa, 0x32, 0xee, 0x67, 0x6b, 0xee, 0xaf, 0xe0, 0x76, 0x93, 0x89,
	0x41, 0x1a, 0xbd, 0xfb, 0xff, 0x67, 0xfc, 0x3b, 0x0b, 0xee, 0xac, 0x74, 0x3e, 0x3b, 0x9d, 0x8c,
	0x8b, 0xd6, 0x7a, 0x5c, 0x24, 0x4f, 0x00, 0x13, 0x0e, 0x84, 0x0c, 0xb3, 0x77, 0xd3, 0xad, 0x4b,
	0x95, 0x51, 0x45, 0xa4, 0x25, 0x61, 0xbe, 0xf6, 0xff, 0x9a, 0x03, 0x7b, 0xf6, 0x0b, 0x42, 0xb6,
	0xa1, 0x7c, 0x5c, 0xef, 0x37, 0x9e, 0x07, 0x2f, 0x4f, 0x5a, 0xf4, 0xad, 0x63, 0x91, 0x5d, 0x20,
	0x5a, 0xd1, 0x7b, 0x4e, 0xeb, 0x7e, 0xcb, 0xe8, 0x73, 0x64, 0x0b, 0xa0, 0xdf, 0xa2, 0xc7, 0x46,
	0xde, 0x50, 0x86, 0xb4, 0xde, 0x3d, 0xcc, 0x00, 0x79, 0xe2, 0x40, 0xa5, 0x47, 0x5b, 0xed, 0xce,
	0x1b, 0xa3, 0x29, 0x28, 0x93, 0x03, 0xcf, 0x3b, 0x32, 0x72, 0x91, 0xdc, 0x82, 0x1b, 0x0d, 0xaf,
	0xeb, 0xf7, 0x03, 0xbf, 0xe1, 0xd1, 0xcc, 0x70, 0x93, 0xd4, 0x60, 0xa7, 0x7d, 0xd2, 0x6d, 0xf4,
	0x3b, 0x5e, 0x77, 0x61, 0xa5, 0xa4, 0x5c, 0x76, 0x5b, 0x7e, 0xbf, 0xd5, 0x34, 0x1a, 0x9b, 0x10,
	0xd8, 0x7a, 0xdd, 0x39, 0x6a, 0x36, 0xea, 0x34, 0xd3, 0x01, 0xb9, 0x09, 0xdb, 0x3a, 0xe2, 0xfa,
	0x51, 0xb6, 0x57, 0x99, 0xdc, 0x86, 0xdd, 0xc3, 0x96, 0x17, 0x1c, 0x78, 0x27, 0xdd, 0x66, 0xa7,
	0x7b, 0x18, 0x1c, 0x78, 0x59, 0x5c, 0x15, 0x95, 0xa2, 0x5a, 0x6b, 0x76, 0xfc, 0x7e, 0xbd, 0xdb,
	0xc8, 0xb6, 0xab, 0xaa, 0xf8, 0x94, 0xbe, 0xe7, 0x1d, 0xbd, 0x3d, 0xf4, 0xba, 0x46, 0xbd, 0xb5,
	0x9f, 0x9a, 0xdf, 0x21, 0xf5, 0xf8, 0x56, 0x9b, 0xe9, 0x18, 0x8f, 0xbd, 0x66, 0x2b, 0xe8, 0x7a,
	0xdd, 0x96, 0x63, 0xa9, 0xa8, 0xe6, 0x94, 0xf5, 0x57, 0x87, 0x4e, 0x6e, 0x49, 0x77, 0x5c, 0x7f,
	0xe3, 0x6c, 0x90, 0x1d, 0x70, 0xe6, 0x74, 0x7d, 0xaf, 0x5f, 0x3f, 0x72, 0xf2, 0xcb, 0xc8, 0x4e,
	0xd7, 0x29, 0xec, 0x7f, 0x0d, 0xf6, 0xec, 0xe7, 0x00, 0x01, 0x1e, 0xed, 0x07, 0x1e, 0x6d, 0xb6,
	0x68, 0x50, 0xf7, 0x1b, 0xce, 0x17, 0x18, 0xc7, 0x85, 0xae, 0xd9, 0xf2, 0x1b, 0x8e, 0xb5, 0xdf,
	0x80, 0x52, 0xf6, 0x97, 0x40, 0x6e, 0x40, 0x15, 0x01, 0x33, 0xa7, 0x5f, 0x2c, 0xa9, 0xea, 0x6f,
	0x1c, 0x6b, 0x51, 0x85, 0x81, 0xef, 0x3f, 0x5b, 0xf8, 0xf7, 0xe9, 0xeb, 0x3f, 0x54, 0x67, 0xa1,
	0x60, 0x75, 0xaa, 0x42, 0x58, 0x2e, 0x63, 0xef, 0xa8, 0xae, 0xaa, 0xb1, 0xdf, 0x01, 0x67, 0xf9,
	0x21, 0xa7, 0xa8, 0x40, 0x5b, 0xfd, 0x13, 0xda, 0x55, 0x87, 0xe4, 0x58, 0xca, 0xa3, 0x91, 0xfd,
	0x5e, 0xab, 0xd1, 0x69, 0x77, 0x5a, 0x4d, 0x27, 0x87, 0x9c, 0xd2, 0x5a, 0x2c, 0xec, 0xc6, 0xfe,
	0x33, 0x73, 0x1f, 0x65, 0x17, 0x7e, 0x09, 0xf2, 0x4d, 0xaf, 0xe1, 0x3b, 0x16, 0xb1, 0xa1, 0xd0,
	0xa6, 0xad, 0x97, 0xbe, 0x93, 0x23, 0x55, 0xb0, 0x7b, 0x9e, 0xdf, 0x51, 0xfc, 0xf1, 0x9d, 0x0d,
	0x52, 0x86, 0x4d, 0xaf, 0xdd, 0xf6, 0x5b, 0x7d, 0xdf, 0xc9, 0xef, 0xff, 0xda, 0xfc, 0x8e, 0x62,
	0x10, 0x25, 0xc8, 0x1f, 0x79, 0xdd, 0x43, 0xc7, 0x22, 0x00, 0xc5, 0xa6, 0x77, 0x72, 0x70, 0xd4,
	0x72, 0x72, 0x0a, 0xaf, 0x58, 0xda, 0xaa, 0x77, 0xb5, 0xf1, 0x8b, 0xd6, 0xdb, 0xd7, 0x1e, 0x6d,
	0x3a, 0x79, 0x85, 0xef, 0xb7, 0xde, 0xf4, 0x9d, 0x82, 0xc2, 0x6b, 0x22, 0x3a, 0x45, 0xb5, 0x9d,
	0x66, 0x49, 0xa7, 0xdb, 0x77, 0x36, 0xf7, 0x7f, 0x04, 0xf6, 0x6c, 0xfc, 0x28, 0x8b, 0xf6, 0x09,
	0x26, 0x58, 0x82, 0x7c, 0xa7, 0xdb, 0xa0, 0x4e, 0xee, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x73,
	0x17, 0x9a, 0xef, 0x26, 0x16, 0x00, 0x00,
}
